services:
  web:
    image: easypwn/web
    build:
      context: .
      dockerfile: web/Dockerfile

  api-gateway:
    image: easypwn/api-gateway
    build:
      context: .
      dockerfile: cmd/api-gateway/Dockerfile
    depends_on:
      - chatbot
      - mailer
      - user-service
      - project-service
      - instance-service

  chatbot:
    image: easypwn/chatbot
    build:
      context: .
      dockerfile: cmd/chatbot/Dockerfile
    depends_on:
      - instance-service

  mailer:
    image: easypwn/mailer
    build:
      context: .
      dockerfile: cmd/mailer/Dockerfile

  user-service:
    image: easypwn/user-service
    build:
      context: .
      dockerfile: cmd/user-service/Dockerfile
    depends_on:
      - db

  project-service:
    image: easypwn/project-service
    build:
      context: .
      dockerfile: cmd/project-service/Dockerfile
    depends_on:
      - db

  instance-service:
    image: easypwn/instance-service
    build:
      context: .
      dockerfile: cmd/instance-service/Dockerfile
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - db

  instance-streaming-service:
    image: easypwn/instance-streaming-service
    build:
      context: .
      dockerfile: cmd/instance-streaming-service/Dockerfile
    depends_on:
      - project-service
      - instance-service

  db:
    image: mysql:9.1
    volumes:
      - ./assets/initdb.sql:/docker-entrypoint-initdb.d/initdb.sql
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 1m
      timeout: 30s
      retries: 5
      start_period: 30s

  caddy:
    image: caddy:2.7.4-alpine
    volumes:
      - ./assets/caddy:/etc/caddy
    ports:
      - 80:80
      - 443:443

volumes:
  mysql_data:
